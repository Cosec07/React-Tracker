{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\GoalTracker\\\\src\\\\components\\\\Timer Webhook\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport './Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyTimer(_ref) {\n  _s();\n\n  let {\n    expiryTimestamp\n  } = _ref;\n  const {\n    seconds,\n    minutes,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn('onExpire called'),\n    autoStart: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Timer \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Time's running...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isRunning ? 'Running' : 'Not running'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resume,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Restarts to 5 minutes timer\n          const time = new Date();\n          time.setSeconds(time.getSeconds() + 300);\n          restart(time);\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyTimer, \"tDSeHly2bqbooK2oj2F/09Zkjcg=\", false, function () {\n  return [useTimer];\n});\n\n_c = MyTimer;\nexport default function App() {\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyTimer, {\n      expiryTimestamp: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTimer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Coding/GoalTracker/src/components/Timer Webhook/Timer.js"],"names":["React","useTimer","MyTimer","expiryTimestamp","seconds","minutes","isRunning","start","pause","resume","restart","onExpire","console","warn","autoStart","fontSize","time","Date","setSeconds","getSeconds","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,aAAP;;;AACA,SAASC,OAAT,OAAsC;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACpC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA;AAPI,MAQFT,QAAQ,CAAC;AAAEE,IAAAA,eAAF;AAAmBQ,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb,CAAnC;AAAoEC,IAAAA,SAAS,EAAG;AAAhF,GAAD,CARZ;AAWA,sBACE;AAAA,2BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA,gCACE;AAAA,oBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,oBACyB;AAAA,oBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,gBADzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,kBAAIE,SAAS,GAAG,SAAH,GAAe;AAA5B;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrB;AACA,gBAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,UAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,GAApC;AACAT,UAAAA,OAAO,CAACM,IAAD,CAAP;AACD,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjCQd,O;UASHD,Q;;;KATGC,O;AAmCT,eAAe,SAASkB,GAAT,GAAe;AAC5B,QAAMJ,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,GAApC,EAF4B,CAEc;;AAC1C,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MARuBI,G","sourcesContent":["import React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport './Timer.css'\r\nfunction MyTimer({ expiryTimestamp }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called'), autoStart : false });\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div>\r\n      <h1>Timer </h1>\r\n      <p>Time's running...</p>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={resume}>Resume</button>\r\n      <button onClick={() => {\r\n        // Restarts to 5 minutes timer\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + 300);\r\n        restart(time)\r\n      }}>Restart</button>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const time = new Date();\r\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\r\n  return (\r\n    <div>\r\n      <MyTimer expiryTimestamp={time} />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}